% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getter.R
\name{get_title}
\alias{get_title}
\alias{get_x_title}
\alias{get_y_title}
\alias{get_legend_title}
\alias{get_legend_labels}
\alias{get_x_labels}
\alias{get_complete_df}
\title{Get titles and labels from data}
\usage{
get_title(x, case = NULL)

get_x_title(x, case = NULL)

get_y_title(x, case = NULL)

get_legend_title(x, case = NULL)

get_legend_labels(x, case = NULL)

get_x_labels(x, case = NULL)

get_complete_df(x, case = NULL)
}
\arguments{
\item{x}{An object of class \code{ggeffects}, as returned by any ggeffects-function;
for \code{get_complete_df()}, must be a list of \code{ggeffects}-objects.}

\item{case}{Desired target case. Labels will automatically converted into the
specified character case. See \code{?sjlabelled::convert_case} for more details
on this argument.}
}
\value{
The titles or labels as character string, or \code{NULL}, if variables
had no labels; \code{get_complete_df()} returns the input list \code{x}
as single data frame, where the grouping variable indicates the
predicted values for each term.
}
\description{
Get variable and value labels from \code{ggeffects}-objects. \code{predict_response()}
saves information on variable names and value labels as additional attributes
in the returned data frame. This is especially helpful for labelled data
(see \strong{sjlabelled}), since these labels can be used to set axis labels and
titles.
}
\examples{
\dontshow{if (require("datawizard", quietly = TRUE) && require("ggplot2", quietly = TRUE) && require("effects", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
library(ggeffects)
library(ggplot2)
data(efc, package = "ggeffects")
efc$c172code <- datawizard::to_factor(efc$c172code)
fit <- lm(barthtot ~ c12hour + neg_c_7 + c161sex + c172code, data = efc)

mydf <- predict_response(fit, terms = c("c12hour", "c161sex", "c172code"))

ggplot(mydf, aes(x = x, y = predicted, colour = group)) +
  stat_smooth(method = "lm") +
  facet_wrap(~facet, ncol = 2) +
  labs(
    x = get_x_title(mydf),
    y = get_y_title(mydf),
    colour = get_legend_title(mydf)
  )

# adjusted predictions, a list of data frames (one data frame per term)
eff <- ggeffect(fit)
eff
get_complete_df(eff)

# adjusted predictions for education only, and get x-axis-labels
mydat <- eff[["c172code"]]
ggplot(mydat, aes(x = x, y = predicted, group = group)) +
  stat_summary(fun = sum, geom = "line") +
  scale_x_discrete(labels = get_x_labels(mydat))
\dontshow{\}) # examplesIf}
}
